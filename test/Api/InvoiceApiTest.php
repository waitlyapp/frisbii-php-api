<?php
/**
 * InvoiceApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Frisbii
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API
 *
 * REST API to manage Frisbii resources
 *
 * The version of the OpenAPI document: 1
 * Contact: support@frisbii.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Frisbii\Test\Api;

use \Frisbii\Configuration;
use \Frisbii\ApiException;
use \Frisbii\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InvoiceApiTest Class Doc Comment
 *
 * @category Class
 * @package  Frisbii
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InvoiceApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for cancelAllDunningPending
     *
     * Cancel all dunning and pending.
     *
     */
    public function testCancelAllDunningPending()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelInvoice
     *
     * Cancel invoice.
     *
     */
    public function testCancelInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelSettleLater
     *
     * Cancel settle later.
     *
     */
    public function testCancelSettleLater()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelTransaction
     *
     * Cancel transaction.
     *
     */
    public function testCancelTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrUpdateBillingAddress
     *
     * Create or update invoice billing address.
     *
     */
    public function testCreateOrUpdateBillingAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrUpdateShippingAddress
     *
     * Create or update invoice shipping address.
     *
     */
    public function testCreateOrUpdateShippingAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteBillingAddress
     *
     * Delete invoice billing address.
     *
     */
    public function testDeleteBillingAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteMetadata4
     *
     * Delete metadata.
     *
     */
    public function testDeleteMetadata4()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteShippingAddress
     *
     * Delete invoice shipping address.
     *
     */
    public function testDeleteShippingAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for detachFromSubscription
     *
     * Detach from subscription.
     *
     */
    public function testDetachFromSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for extendKAuthTransaction
     *
     * Extend authorization transaction.
     *
     */
    public function testExtendKAuthTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for extendKlarnaTransaction
     *
     * Extend Klarna authorization transaction.
     *
     */
    public function testExtendKlarnaTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for failInvoice
     *
     * Fail invoice.
     *
     */
    public function testFailInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInvoice
     *
     * Get invoice.
     *
     */
    public function testGetInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMetadata4
     *
     * Get metadata.
     *
     */
    public function testGetMetadata4()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for manualSettle
     *
     * Manual settle.
     *
     */
    public function testManualSettle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reactivateInvoice
     *
     * Reactivate invoice.
     *
     */
    public function testReactivateInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for settle
     *
     * Settle.
     *
     */
    public function testSettle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transaction
     *
     * Get transaction.
     *
     */
    public function testTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transactionDetails
     *
     * Get transaction details.
     *
     */
    public function testTransactionDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateMetadata4
     *
     * Create or update metadata.
     *
     */
    public function testUpdateMetadata4()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
